# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes 4;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;
worker_rlimit_nofile 30000;

# Load dynamic modules. See /usr/share/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 65534;
    multi_accept on; 
    use epoll; 
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;
    client_max_body_size 30m;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.

     proxy_buffering on;
     proxy_cache_path /www/html/cache levels=1:2 keys_zone=mycache:100m max_size=1000m inactive=200m;
     proxy_temp_path /www/html/cached;
     proxy_buffer_size 64k;
     proxy_buffers 100 64k;

    include /etc/nginx/conf.d/*.conf;
     upstream apis{ 
      server 127.0.0.1:1688;
      #server 127.0.0.1:1678;
   }
     upstream napis{ 
      server 127.0.0.1:6666;
   }
   upstream golang{ 
      server 127.0.0.1:9999 weight=1;
      server 10.116.88.180:9999 weight=2;
      keepalive 60;
   }



    server {
        listen       9090 default_server;
        listen       [::]:9090 default_server;
        location = /api/queryv2 {
               proxy_cache mycache;
               proxy_cache_key $host$uri$is_args$args;
               proxy_cache_valid 200 304 1m;
               proxy_cache_min_uses 3;
               expires    30s;
               proxy_pass    http://apis/queryv2;
              add_header Access-Control-Allow-Origin *;
        }
        location = /api/querystrangerv2 {
               proxy_cache mycache;
               proxy_cache_key $host$uri$is_args$args;
               proxy_cache_valid 200 304 1m;
               proxy_cache_min_uses 3;
               expires    30s;
               proxy_pass    http://apis/querystrangerv2;
              add_header Access-Control-Allow-Origin *;
        }
       
        location = /msg/myinfo{
               proxy_cache mycache;
               proxy_cache_key $host$uri$is_args$args;
               proxy_cache_valid 200 304 1m;
               proxy_cache_min_uses 3;
               expires    120s;
               proxy_pass    http://127.0.0.1:2688/myinfo;
               add_header Access-Control-Allow-Origin *;
        }
       
        location ^~ /api/{
               #proxy_cache mycache;
               #proxy_cache_key $host$uri$is_args$args;
               #proxy_cache_valid 200 304 1m;
               #proxy_cache_min_uses 3;
               #expires    30s;
             # proxy_pass    http://127.0.0.1:1688/;
              proxy_pass    http://apis/;
              add_header Access-Control-Allow-Origin *;
        }
        location ^~ /msg/{
               #proxy_cache mycache;
               #proxy_cache_key $host$uri$is_args$args;
               #proxy_cache_valid 200 304 1m;
               #proxy_cache_min_uses 3;
               #expires    3s;
               proxy_pass    http://127.0.0.1:2688/;
               add_header Access-Control-Allow-Origin *;
        }

    }

    server {
        listen       80 default_server;
        listen       [::]:80 default_server;
        server_name  _;
        root         /www/html;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        location / {
           if (!-e $request_filename) {
           rewrite ^/fuwa/(.*)$ http://120.24.36.245/fuwa/$1 permanent;
           rewrite ^/toplist/(.*)$ http://120.24.36.245/toplist/$1 permanent;
       }
        }

        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
        #location = /api/queryv9 {
        #       proxy_cache mycache;
        #       proxy_cache_key $host$uri$is_args$args;
        #       proxy_cache_valid 200 304 1m;
        #       proxy_cache_min_uses 3;
        #       expires    30s;
        #       proxy_pass    http://napis/queryv2;
        #      add_header Access-Control-Allow-Origin *;
        #}
        location = /api/queryv2 {
               proxy_pass    http://golang/queryv2;
               add_header Access-Control-Allow-Origin *;
               proxy_http_version 1.1;
               proxy_set_header Connection "";
        }

        #location = /api/querystrangerv9 {
        #       proxy_cache mycache;
        #       proxy_cache_key $host$uri$is_args$args;
        #       proxy_cache_valid 200 304 1m;
        #       proxy_cache_min_uses 3;
        #       expires    30s;
        #       proxy_pass    http://napis/querystrangerv2;
        #      add_header Access-Control-Allow-Origin *;
        #}
        location = /api/querystrangerv2 {
               proxy_pass    http://golang/querystrangerv2;
               add_header Access-Control-Allow-Origin *;
               proxy_http_version 1.1;
               proxy_set_header Connection "";
        }

        #location = /api/queryv8 {
        #       proxy_cache mycache;
        #       proxy_cache_key $host$uri$is_args$args;
        #       proxy_cache_valid 200 304 1m;
        #       proxy_cache_min_uses 3;
        #       expires    30s;
        #       proxy_pass    http://napis/queryv3;
        #      add_header Access-Control-Allow-Origin *;
        #}

        location = /api/queryv3{
               proxy_pass    http://golang/queryv3;
               add_header Access-Control-Allow-Origin *;
               proxy_http_version 1.1;
               proxy_set_header Connection "";
        }
        #location = /api/querystrangerv8 {
        #       proxy_cache mycache;
        #       proxy_cache_key $host$uri$is_args$args;
        #       proxy_cache_valid 200 304 1m;
        #       proxy_cache_min_uses 3;
        #       expires    30s;
        #       proxy_pass    http://napis/querystrangerv3;
        #      add_header Access-Control-Allow-Origin *;
        #}

        location = /api/querystrangerv3{
               proxy_pass    http://golang/querystrangerv3;
               add_header Access-Control-Allow-Origin *;
               proxy_http_version 1.1;
               proxy_set_header Connection "";
        }
        location = /api/queryclass{
               proxy_cache mycache;
               proxy_cache_key $host$uri$is_args$args;
               proxy_cache_valid 200 304 1m;
               proxy_cache_min_uses 3;
               expires    1d;
               proxy_pass    http://napis/queryclass;
              add_header Access-Control-Allow-Origin *;
        }
       
        location = /msg/myinfo{
               proxy_cache mycache;
               proxy_cache_key $host$uri$is_args$args;
               proxy_cache_valid 200 304 1m;
               proxy_cache_min_uses 3;
               expires    120s;
               proxy_pass    http://127.0.0.1:7777/myinfo;
               add_header Access-Control-Allow-Origin *;
        }
       
        location = /api/querystrvideo{
              proxy_pass    http://golang/querystrvideo;
              add_header Access-Control-Allow-Origin *;
               proxy_http_version 1.1;
               proxy_set_header Connection "";
        }
        location = /api/queryvideo{
              proxy_pass    http://golang/queryvideo;
              add_header Access-Control-Allow-Origin *;
               proxy_http_version 1.1;
               proxy_set_header Connection "";
        }

        location ^~ /api/{
               #proxy_cache mycache;
               #proxy_cache_key $host$uri$is_args$args;
               #proxy_cache_valid 200 304 1m;
               #proxy_cache_min_uses 3;
               #expires    30s;
             # proxy_pass    http://127.0.0.1:1688/;
              proxy_pass    http://napis/;
              add_header Access-Control-Allow-Origin *;
        }
        location ^~ /msg/{
               #proxy_cache mycache;
               #proxy_cache_key $host$uri$is_args$args;
               #proxy_cache_valid 200 304 1m;
               #proxy_cache_min_uses 3;
               #expires    3s;
               proxy_pass    http://127.0.0.1:7777/;
               add_header Access-Control-Allow-Origin *;
        }

    }

# Settings for a TLS enabled server.
#
#    server {
#        listen       443 ssl http2 default_server;
#        listen       [::]:443 ssl http2 default_server;
#        server_name  _;
#        root         /usr/share/nginx/html;
#
#        ssl_certificate "/etc/pki/nginx/server.crt";
#        ssl_certificate_key "/etc/pki/nginx/private/server.key";
#        ssl_session_cache shared:SSL:1m;
#        ssl_session_timeout  10m;
#        ssl_ciphers HIGH:!aNULL:!MD5;
#        ssl_prefer_server_ciphers on;
#
#        # Load configuration files for the default server block.
#        include /etc/nginx/default.d/*.conf;
#
#        location / {
#        }
#
#        error_page 404 /404.html;
#            location = /40x.html {
#        }
#
#        error_page 500 502 503 504 /50x.html;
#            location = /50x.html {
#        }
#    }

}

